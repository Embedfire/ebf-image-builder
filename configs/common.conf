## [Project Path]
	ROOT="$(dirname "$(dirname "$(readlink -fm "$0")")")"
	CONFIG="$ROOT/configs"
	BOARD_CONFIG="$CONFIG/boards"
	BUILD="$ROOT/build"
	BUILD_IMAGES="$BUILD/images"
	BUILD_DEBS="$BUILD/debs"
	BUILD_SCRIPT="$ROOT/scripts"
	LOCAL_PKG="$ROOT/local_pkg"
	LOCAL_DIR="$ROOT/local_directory"

## [download mirror]
	DEBIAN_MIRROR='deb.debian.org/debian'
	UBUNTU_MIRROR='ports.ubuntu.com/'
	if [[ $DOWNLOAD_MIRROR == china ]] ; then
		# DEBIAN_MIRROR='mirrors.tuna.tsinghua.edu.cn/debian'
		# UBUNTU_MIRROR='mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/'
		# DEBIAN_MIRROR='mirrors.bfsu.edu.cn/debian'
		# UBUNTU_MIRROR='mirrors.bfsu.edu.cn/ubuntu-ports/'
		DEBIAN_MIRROR='mirrors.ustc.edu.cn/debian'
		UBUNTU_MIRROR='mirrors.ustc.edu.cn/ubuntu-ports/'		
	fi
	#repo_external_server="https://Embedfire.github.io"
	repo_external_server="https://cloud.embedfire.com/mirrors/ebf-debian"
	#repo_external_server="https://cloud.embedfire.com/mirrors/ebf-test"
	repo_external_server_backup1="https://Embedfire.github.io/"
	repo_external_server_backup2="https://sourceforge.net/projects/embedfire-debian-sources/files/"

## [pakage features]
	if [[ $DISTRIBUTION == Debian ]]; then
		release="carp"
		deb_distribution="lubancat"
		deb_codename=$DISTRIB_RELEASE
		#deb_arch="armhf"
		deb_components="main contrib non-free"
		deb_mirror=$DEBIAN_MIRROR
		repo_external_dist=$DISTRIB_RELEASE
		repo_external_components="main"
		#KDEB_VERSION="2.2LubanCat"
		KDEB_VERSION="1.$(date +%g%m)stable"
	else
		deb_distribution="ubuntu"
		deb_codename=$DISTRIB_RELEASE
		#deb_arch="armhf"
		deb_components="main universe multiverse"
		repo_external_dist=$DISTRIB_RELEASE
		repo_external_components="main"
		deb_mirror=$UBUNTU_MIRROR
		if [[ $DISTRIB_RELEASE == bionic ]]; then 
		release="18.04"
		#KDEB_VERSION="18.04-Ubuntu"
		KDEB_VERSION="1.$(date +%g%m)stable"
		fi

		if [[ $DISTRIB_RELEASE == focal ]]; then 
		release="20.04"
		#KDEB_VERSION="20.04-Ubuntu"
		KDEB_VERSION="1.$(date +%g%m)stable"
		fi
		
	fi
	chroot_tarball="enable"

## [install default pakage]
	deb_arch="armhf"
	deb_include="apt-transport-https ca-certificates connman curl dosfstools\
				gnupg gnupg2 ifupdown initramfs-tools isc-dhcp-client nano \
				net-tools netcat rsync sudo udhcpd parted mtd-utils mmc-utils\
				rng-tools haveged wpasupplicant udhcpc openssh-server avahi-daemon\
				gpiod kpartx jq libgpiod-dev rfkill usbutils exfat-fuse exfat-utils \
				ssh alsa-utils" 

	deb_exclude="aptitude aptitude-common groff-base info install-info man-db manpages\
				manpages-dev tasksel tasksel-data"

## [install extern pakage]
	repo_external_arch="armhf"
	repo_external="enable"
	repo_external_key="keyfile"
	repo_local_file="enable"
	case $DISTRIB_TYPE in
	console)
		repo_external_pkg_list="kobs-ng-for-imx6ull fire-config-v2 wifi-depent libatomic1 "
		system_directory="/usr/share"
	;;
	qt)
		repo_external_pkg_list="kobs-ng-for-imx6ull fire-config-v2 wifi-depent ebf-qtdemo libatomic1"
		system_directory="/usr/share"
	;;
	desktop)
		repo_external_pkg_list="kobs-ng-for-imx6ull fire-config-v2 wifi-depent xfce4"
		system_directory="/usr/share"
	;;
	esac

## [TFA & U-boot & Linux GitHub info]
	if [[ $DOWNLOAD_MIRROR == china ]] ; then
		#LINUX_SOURCE_URL="https://e.coding.net/embedfire/lubancat/ebf_linux_kernel.git"
		LINUX_SOURCE_URL="https://github.com/Embedfire/ebf_linux_kernel"
		UBOOT_SOURCE_URL="https://gitee.com/Embedfire/ebf_linux_uboot"
		TFA_SOURCE_URL="https://gitee.com/Embedfire/ebf_linux_tfa"
	else
		LINUX_SOURCE_URL="https://github.com/Embedfire/ebf_linux_kernel"
		UBOOT_SOURCE_URL="https://github.com/Embedfire/ebf_linux_uboot"
		TFA_SOURCE_URL="https://github.com/Embedfire/ebf_linux_tfa/"
	fi

	if [[ $SOURCE_URL == gitlab ]] ; then	
		LINUX_SOURCE_URL="git@gitlab.ebf.local:st-mp1/ebf_linux_kernel.git"
		UBOOT_SOURCE_URL="git@gitlab.ebf.local:st-mp1/ebf_linux_uboot.git"
	fi

	GIT_CLONE_OPTIONS="--depth=1"
	FENIX_BRANCH="master"
	ROOTFSCACHE_VERSION=6
	DATE=$(date +%F | sed 's/-//g')
	IMAGE_RELEASE_VERSION="${DATE:2}"

## [CPU info]
	NR_JOBS_MAX=20
	NR_CPUS=$(grep -c processor /proc/cpuinfo)
	if [ ${NR_CPUS} -le ${NR_JOBS_MAX} ]; then
		NR_JOBS=${NR_CPUS}
	else
		NR_JOBS=${NR_JOBS_MAX}
fi

## [Define colors]
	BLACK="\e[0;30m"
	BOLDBLACK="\e[1;30m"
	RED="\e[0;31m"
	BOLDRED="\e[1;31m"
	GREEN="\e[0;32m"
	BOLDGREEN="\e[1;32m"
	YELLOW="\e[0;33m"
	BOLDYELLOW="\e[1;33m"
	BLUE="\e[0;34m"
	BOLDBLUE="\e[1;34m"
	MAGENTA="\e[0;35m"
	BOLDMAGENTA="\e[1;35m"
	CYAN="\e[0;36m"
	BOLDCYAN="\e[1;36m"
	WHITE="\e[0;37m"
	BOLDWHITE="\e[1;37m"
	ENDCOLOR="\e[0m"

## [Enable Proxy?]
	#apt_proxy=localhost:3142/

## [info colors]
	ERROR="${RED}Error:${ENDCOLOR}"
	WARNING="${YELLOW}Warning:${ENDCOLOR}"
	INFO="${GREEN}Info:${ENDCOLOR}"

